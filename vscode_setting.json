// Place your key bindings in this file to override the defaultsauto[]
[  
   {
      "key": "ctrl+tab",
      // "command": "workbench.action.nextEditor"
      "command": "workbench.action.quickOpenPreviousRecentlyUsedEditor"
  },
  {
      "key": "ctrl+shift+tab",
      "command": "workbench.action.previousEditor"
  },
   {
      "key": "ctrl+d",
      "command": "editor.action.deleteLines",
      "when": "textInputFocus && !editorReadonly"
   },
   // Insert snippets
   {
      "key": "ctrl+alt+1",
      "command": "editor.action.insertSnippet",
      "when": "editorTextFocus",
      "args": {
        "snippet": "console.group($1);\n\nconsole.groupEnd($0);"
      }
   },
   {
      "key": "ctrl+shift+/",
      "command": "editor.action.insertSnippet",
      "when": "editorTextFocus",
      "args": {
        "snippet": "/**\n * $1\n**/"
      }
   },

   {
      "key": "ctrl+shift+space",
      "command": "editor.action.formatDocument",
      "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
   },

   {
      "key": "alt+k",
      "command": "cursorDown",
      "when": "textInputFocus && editorTextFocus"
   },
   {
      "key": "alt+k",
      "command": "selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
   },
   // Move cursor to end of file
   {
      "key": "ctrl+k",
      "command": "cursorBottom",
      "when": "textInputFocus"
   },
   {
      "key": "alt+i",
      "command": "cursorUp",
      "when": "textInputFocus && editorTextFocus"
   },
   {
      "key": "alt+i",
      "command": "selectPrevSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
   },
   // Move cursor to beginning of file
   {
      "key": "ctrl+i",
      "command": "cursorTop",
      "when": "textInputFocus"
   },
   {
      "key": "alt+j",
      "command": "cursorLeft",
      "when": "textInputFocus && editorTextFocus"
   },
   {
      "key": "alt+l",
      "command": "cursorRight",
      "when": "textInputFocus && editorTextFocus"
   },
   // Word select to the left
   {
      "key": "ctrl+alt+j",
      "command": "cursorWordLeftSelect",
      "when": "textInputFocus"
   },
   // Word select to the right
   {
      "key": "ctrl+alt+l",
      "command": "cursorWordRightSelect",
      "when": "textInputFocus"
   },
   // Cursor select up
   {
      "key": "ctrl+alt+i",
      "command": "cursorUpSelect",
      "when": "textInputFocus"
   },
   // Cursor select down
   {
      "key": "ctrl+alt+k",
      "command": "cursorDownSelect",
      "when": "textInputFocus"
   },
   // Copy line up
   {
      "key": "shift+alt+i",
      "command": "editor.action.copyLinesUpAction",
      "when": "editorTextFocus && !editorReadonly"
    },
   // Copy line down
   {
      "key": "shift+alt+k",
      "command": "editor.action.copyLinesDownAction",
      "when": "editorTextFocus && !editorReadonly"
   },
   // Move cursor to end of the line
   {
      "key": "ctrl+l",
      "command": "cursorLineEnd",
      "when": "textInputFocus && editorTextFocus"
   },
   // Move cursor to start of the line
   {
      "key": "ctrl+j",
      "command": "cursorLineStart",
      "when": "textInputFocus && editorTextFocus"
   },
   {
      "key": "ctrl+alt+e",
      "command": "code-runner.run"
   },
   {
      "key": "ctrl+alt+n",
      "command": "-code-runner.run"
   },
   {
      "key": "ctrl+alt+q",
      "command": "quokka.createJavaScriptFile",
      "when": "!quokka.isLiveShareClient && !terminalFocus"
   },
   {
      "key": "ctrl+k j",
      "command": "-quokka.createJavaScriptFile",
      "when": "!quokka.isLiveShareClient && !terminalFocus"
   },
   {
      "key": "ctrl+shift+q ctrl+shift+w",
      "command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
      "when": "inQuickOpen && inViewsPicker"
   },
   {
      "key": "ctrl+shift+q",
      "command": "-workbench.action.quickOpenNavigatePreviousInViewPicker",
      "when": "inQuickOpen && inViewsPicker"
   },
   {
      "key": "ctrl+shift+r",
      "command": "-rerunSearchEditorSearch",
      "when": "inSearchEditor"
   },
   {
      "key": "ctrl+shift+r",
      "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
      "when": "inQuickOpen && inRecentFilesPicker"
   },
   {
      "key": "ctrl+shift+r",
      "command": "-editor.action.refactor",
      "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
   },
   {
      "key": "ctrl+shift+q",
      "command": "quokka.toggle"
   },
   {
      "key": "ctrl+shift+c",
      "command": "-workbench.action.terminal.openNativeConsole",
      "when": "!terminalFocus"
   },
   {
      "key": "ctrl+tab",
      "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
   },
   {
      "key": "ctrl+tab",
      "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
      "when": "inEditorsPicker && inQuickOpen"
   },
   {
      "key": "ctrl+shift+tab",
      "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
      "when": "inEditorsPicker && inQuickOpen"
   },
   {
      "key": "ctrl+q",
      "command": "-workbench.action.quickOpenView"
   },
   {
      "key": "ctrl+shift+r",
      "command": "workbench.action.reloadWindow"
   },
   {
      "key": "ctrl+r",
      "command": "-workbench.action.reloadWindow",
      "when": "isDevelopment"
   },
   {
      "key": "ctrl+alt+w",
      "command": "quokka.createTypeScriptFile",
      "when": "!quokka.isLiveShareClient && !terminalFocus"
   },
   {
      "key": "ctrl+k t",
      "command": "-quokka.createTypeScriptFile",
      "when": "!quokka.isLiveShareClient && !terminalFocus"
   }
]
